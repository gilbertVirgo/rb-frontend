{"version":3,"sources":["Home.js","components/FormFieldGroup.js","Functions.js","components/FormInput.js","components/Custom.js","components/FormSection.js","components/FormTitle.js","components/FormHeading.js","components/FormSubHeading.js","FormView.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","React","Component","FieldGroup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","section","name","data","state","fields","sections","index","findIndex","field","options","hidden","setState","_this2","map","sectionIndex","Custom_Custom","Section","key","Heading","title","SubHeading","description","fieldIndex","Custom","Input","objectSpread","Form_default","Title","Group","renderData","genKey","Math","floor","random","ImageInput","handleFileSelect","event","files","target","label","length","onChange","className","assign","type","accept","capture","bind","List","change","mod","current","value","rows","_this3","row","Form","Row","Col","Button_default","variant","_this4","contents","_this5","inputProps","id","placeholder","required","Control","Check","as","children","option","optionProps","text","toLowerCase","replace","selected","style","display","Label","marginTop","FormFieldGroup","margin","fontWeight","fontStyle","color","FormInput","FormView","$","ajax","url","concat","params","method","dataType","done","resp","fail","err","console","error","log","ViewStyle","maxWidth","width","padding","boxSizing","App","react_router_dom","to","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bef8da6e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <section>\n                <h1>Welcome home!</h1>\n                <p>You have reached the home page.</p>\n            </section>\n        );\n    }\n}","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Custom from \"./Custom\";\n\n/*\nEach child has ability to change its \"mode\" in parent's state\n\n*/\n\nexport default class FieldGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { data: props.data };\n    }\n\n    toggle = (section, name) => {\n        // State is immutable so make copies (you just have to, I don't know why)\n        let data = this.state.data, fields = this.state.data.sections[section].fields;\n        const index = fields.findIndex(field => field.name == name);\n\n        if(fields[index]) {\n            fields[index].options.hidden = !fields[index].options.hidden;\n            data.sections[section].fields = fields;\n\n            // Update, and viola!\n            this.setState({ data: data });\n        }\n    }\n\n    renderData() {\n        const data = this.state.data;\n\n        // Should probably find out a cleaner way of doing this...\n        const sections = data.sections.map((section, sectionIndex) => {\n            return (\n                <Custom.Section key={sectionIndex}>\n                    <Custom.Heading>{section.title}</Custom.Heading>\n                    <Custom.SubHeading>{section.description}</Custom.SubHeading>\n                    {\n                        section.fields.map((field, fieldIndex) => {\n                            // Bypass manual input by not using JSX. Clean.\n                            return React.createElement(Custom.Input, {...field, toggle: this.toggle, section: sectionIndex, key: fieldIndex}, null);\n                        })\n                    }\n                </Custom.Section>\n            );\n        });\n\n        return (\n            <Form>\n                <Custom.Title>{ data.title }</Custom.Title>\n                { sections }\n            </Form>\n        );\n    }\n\n    render() {\n        return (\n            <Form.Group>\n                { this.renderData() }\n            </Form.Group>\n        );\n    }\n}","export function genKey() {\n    // if(!window.keys) window.keys = [];\n    // return window.keys.push(Math.max(...window.keys) + 1);\n    return Math.floor(Math.random() * 999999);\n}","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport { genKey } from \"../Functions\";\n\n/*\n    Sibling interaction\n\n    Every child component is passed a \"toggle\" callback method from parent.\n    Parent component handles change events and updates state accordingly.\n\n    Stupidly complicated, but you can't use jQuery \".toggle()\" in React\n    *rolls eyes*\n*/\n\nclass ImageInput extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            label: \"Choose images\"\n        }\n    }\n\n    handleFileSelect = event => {\n        let files = event.target.files;\n        this.setState({label: files.length ? event.target.files[0].name : \"No images chosen\"});\n        this.props.onChange(event);\n    }\n\n    render() {\n        return (\n            <div className=\"custom-file\" key={genKey()}>\n                <input\n                    {...this.props}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    capture=\"camera\"\n                    className=\"custom-file-input\"\n                    onChange={this.handleFileSelect.bind(this)}\n                />\n                <div className=\"custom-file-label\" key={genKey()}>\n                    {this.state.label}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            rows: [],\n            current: props.fields,\n            fields: props.fields \n        };\n    }\n\n    change = event => {\n        // Executed when a field in the bottom row is changed\n\n        let mod = this.state.current;\n        const index = mod.findIndex(field => {\n            // Find the right field\n            return field.name = event.target.name;\n        });\n\n        // Set the new value\n        mod[index].value = event.target.value;\n\n        // Set the state\n        this.setState({current: mod});\n    }\n\n    render() {\n        return (\n            <Form.Group key={genKey()}>\n                {\n                    this.state.rows.map((row) => {\n                        return React.createElement(\n                            Form.Row, {key: genKey()}, \n                            row.map((field) => {\n                                return React.createElement(\n                                    Col, {key: genKey()}, \n                                    React.createElement(Input, field, null)\n                                );\n                            })\n                        )\n                    })\n                } \n                {\n                    React.createElement(\n                        Form.Row, null, \n                        this.state.fields.map((field) => {\n                            return React.createElement(\n                                Col, {key: genKey()}, \n                                React.createElement(Input, {\n                                    ...field,\n                                    key: genKey(),\n                                    change: this.change.bind(this)\n                                }, null)\n                            );\n                        })\n                    )\n                }\n                <Button variant=\"secondary\"><b>+</b></Button>\n            </Form.Group>\n        );\n    }\n}\n\nexport default class Input extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            contents: null\n        };\n    }\n\n    componentDidMount() {\n        const inputProps = {\n            id: this.props.name,\n            name: this.props.name,\n            placeholder: this.props.placeholder,\n            onChange: (event) => {\n                // If toggle controller, use inherited \"toggle\" function to change sibling\n                // state via parent.\n                if(this.props.options) {\n                    if(this.props.options.toggle) {\n                        this.props.toggle(this.props.section, this.props.options.toggle);\n                    }\n                    if(this.props.change) {\n                        this.props.change(event);\n                    }\n                }\n            }\n        };\n\n        if(this.props.required) inputProps.required = \"required\";\n\n        switch(this.props.type) {\n            // Multiple cases\n            case \"text\": case \"password\": case \"number\": case \"tel\": case \"url\": case \"email\": \n                this.setState({\n                    // Use without JSX syntax for neater and more efficient props\n                    contents: React.createElement(\n                        Form.Control, \n                        {...inputProps, type: this.props.type, key: genKey()}, \n                        null\n                    )\n                });\n                break;\n            case \"checkbox\": case \"radio\": \n                this.setState({\n                    contents: React.createElement(\n                        Form.Check,\n                        {...inputProps, type: this.props.type, key: genKey()},\n                        null\n                    )\n                });\n                break;\n            case \"select\":\n                this.setState({\n                    contents: React.createElement(\n                        Form.Control,\n                        {\n                            ...inputProps, key: genKey(), \n                            as: \"select\", \n                            children: this.props.options.options.map((option) => {\n                                let optionProps = {\n                                    // \"United Kingdom\" -> \"unitedkingdom\"\n                                    value: option.text.toLowerCase().replace(/ /g, \"\")\n                                };\n\n                                // Even selected='false' registers an option as selected, so\n                                // must only add selected attr if necessary\n                                if(this.props.options.selected == option.text) optionProps.selected = \"selected\"; \n\n                                return React.createElement(\n                                    \"option\", \n                                    optionProps, \n                                    option.text\n                                );\n                            })\n                        },\n                        null\n                    )\n                });\n                break;\n            case \"textarea\":\n                this.setState({\n                    contents: React.createElement(\n                        Form.Control,\n                        { ...inputProps, as: \"textarea\", rows: \"3\", key: genKey() },\n                        null\n                    )\n                });\n                break;\n            case \"image\":\n                this.setState({\n                    contents: React.createElement(\n                        ImageInput, \n                        { ...inputProps, key: genKey() },\n                        null\n                    )\n                });\n                break;\n            case \"list\":\n                this.setState({\n                    contents: React.createElement(\n                        List,\n                        { ...inputProps, fields: this.props.options.fields, key: genKey() },\n                        null\n                    )\n                })\n                break;\n        }\n    }\n\n    render() {\n        let style = {};\n        if(this.props.options) {\n            // The element's display may not be block, so only set\n            // display if necessary\n            if(this.props.options.hidden) style.display = \"none\";\n        }\n\n        return (\n            <Form.Group style={style} key={genKey()}>\n                <Form.Label>{this.props.label}</Form.Label>\n                <p style={{ marginTop: \"-10px\" }}>\n                    <small><em>{this.props.description}</em></small>\n                </p>\n                {this.state.contents}\n            </Form.Group>\n        );\n    }\n}","import React from \"react\";\nimport FormFieldGroup from \"./FormFieldGroup\";\nimport FormSection from \"./FormSection\";\nimport FormTitle from \"./FormTitle\";\nimport FormHeading from \"./FormHeading\";\nimport FormSubHeading from \"./FormSubHeading\";\nimport FormInput from \"./FormInput\";\n\nexport default class Custom extends React.Component {}\n\nCustom.FieldGroup = FormFieldGroup;\nCustom.Section = FormSection;\nCustom.Title = FormTitle;\nCustom.Heading = FormHeading;\nCustom.SubHeading = FormSubHeading;\nCustom.Input = FormInput;","import React from \"react\";\n\nexport default function Section(props) {\n    return (\n        <section style={{\n            margin: \"10px 0\"\n            }}>\n            {props.children}\n            <hr/>\n        </section>\n    )\n}","import React from \"react\";\n\nexport default function Title(props) {\n    return (\n        <section>\n            <h1>{props.children}</h1>\n        </section>\n    );\n}","import React from \"react\";\n\nexport default function Heading(props) {\n    return (\n        <section style={{margin: \"10px 0\"}}>\n            <h4>{props.children}</h4>\n        </section>\n    );\n}\n\n{/* <h6 style={{\n    color: \"grey\",\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    fontFamily: \"Gill Sans\",\n    textTransform: \"uppercase\", \n    backgroundColor: \"white\",\n    zIndex: \"10\",\n    display: \"inline-block\",\n    position: \"relative\",\n    margin: \"0 auto\",\n    padding: \"0 5px\",\n    boxSizing: \"border-box\",\n    left: \"0\", right: \"0\", top: \"-30px\",\n    lineHeight: \"30px\",\n    }}>\n    {props.children}\n</h6> */}","import React from \"react\";\n\nexport default function SubHeading(props) {\n    return (\n        <section style={{margin: \"10px 0\", fontWeight: \"300\", fontStyle: \"italic\", color: \"grey\"}}>\n            <h6>{props.children}</h6>\n        </section>\n    );\n}","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport $ from \"jquery\";\n\nimport Custom from \"./components/Custom\";\n\nexport default class FormView extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {data: null};\n    }\n\n    componentDidMount() {\n        $.ajax({\n            url: `/api/v1/form/${this.props.params.id}`,\n            method: \"GET\", \n            dataType: \"json\"\n        })\n        .done((resp) => {\n            this.setState({data: resp});\n        })\n        .fail((err) => {\n            console.error(\"There was an error\", err);\n        });\n    }\n\n    render() {\n        console.log(\"JSON\", this.state.data);\n        return (\n           <Form>\n               {/* Only load the FieldGroup when JSON is recieved */}\n               {this.state.data ? <Custom.FieldGroup data={this.state.data} /> : \"Loading...\"}\n           </Form>\n        );\n    }\n}","import React from 'react';\nimport { Link, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport FormView from \"./FormView\";\n//import TestForm from \"./test/TestForm\";\nimport { genKey } from \"./Functions\";\n\nconst ViewStyle = {\n  maxWidth: \"600px\",\n  width: \"100%\",\n  margin: \"0 auto\",\n  padding: \"10px\",\n  boxSizing: \"border-box\"\n};\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" key={genKey()}>Home</Link>\n            </li>\n            <li>\n              <Link to=\"/test/form/\" key={genKey()}>Test Form</Link>\n            </li>\n          </ul>\n        </nav>\n        <main style={ViewStyle} className=\"App\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/form/:id\" component={FormView} />\n          {/* <Route path=\"/test/form/\" component={TestForm} /> */}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}